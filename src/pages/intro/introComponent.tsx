import React from 'react';

// import introBg_1 from './introBg_1.png';
// import introBgMask from './introBgMask.png';
export class Intro extends React.Component<any, any> {
	constructor(props: any) {
		super(props);
		this.state = {
			userName: ''
		};
	}
	login() {
		if(this.state.userName) {
			console.log(this.state.userName)
			this.props.onUserNameChange(this.state.userName)
		}
	}
	render() {
		return (
			<div
				style={{
					height: '100%',
					width: '100%',
				}}
			>
				<div>
					<img src={this.props.images[13]} style={{ position: 'absolute' }} />
				</div>

				<div
					style={{
						position: 'absolute',
						width: '100%',
						height: '100%',
						top: '0px'
					}}
				>
					<img
						src={this.props.images[12]}
						style={{
							position: 'absolute',
							clipPath:
								'polygon(35% 60%, 90% 60%, 90% 0%, 72% 0%, 72% 90%, 100% 90%, 100% 60%, 72% 60%, 72% 100%, 90% 100%, 90% 90%, 35% 90%)'
						}}
					/>
				</div>
				<div
					className="dFordMainTitle"
					style={{
						position: 'absolute',
						width: '100%',
						height: '190px',
						left: '-100px',
						top: '170px'
					}}
				>
					Demo Intro
				</div>
				<div
					className="dFordNormalText"
					style={{
						position: 'absolute',
						width: '636px',
						height: '167px',
						left: '165px',
						top: '341px'
					}}
				>
					Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore
					et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
					aliquip ex ea commodo consequat.
				</div>
				<div>
					<div>
						<input
							value={this.state.userName}
							onChange={(e) => this.setState({ userName: e.target.value })}
							placeholder="Input your name"
							style={{
								position: 'absolute',
								width: '310px',
								height: '62px',
								left: '160px',
								top: '477px',
								background: '#5E504B',
								border: '3px solid #929292',
								boxSizing: 'border-box',
								textAlign: 'center',
								borderRadius: '41px',
								fontFamily: 'Lincoln Proxima Nova Light',
								fontStyle: 'normal',
								fontWeight: 300,
								fontSize: '22px',
								lineHeight: '110%',
								/* or 24px */
								letterSpacing: '-0.01em',
								color: '#FFFFFF',
								opacity: 0.5
							}}
						/>
					</div>

					<div
						style={{
							position: 'absolute',
							width: '82px',
							height: '57px',
							left: '744px',
							top: '477px',
							fontStyle: 'normal',
							fontWeight: '900',
							fontSize: '36px',
							lineHeight: '57px',
							color: '#FFFFFF',
							opacity: 0.9
						}}

						onClick = {()=>{ this.login()}}
					>
						<svg width="82" height="23" viewBox="0 0 82 23" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path
								opacity="0.9"
								d="M0.544922 15.9883L0.720703 22.2109H0.966797L1.98633 20.998C2.4082 21.3496 3.16406 21.6836 4.28906 22.0352C5.41406 22.3867 6.50391 22.5449 7.55859 22.5449C8.50781 22.5449 9.43945 22.4395 10.3535 22.1934C11.2676 21.9473 12.0938 21.5957 12.8496 21.1387C13.6055 20.6816 14.2207 20.0664 14.6777 19.293C15.1348 18.5371 15.3633 17.6758 15.3633 16.709C15.3633 15.2676 14.959 14.1074 14.168 13.2285C13.377 12.3496 12.1641 11.6289 10.5469 11.084C9.94922 10.8906 9.49219 10.7324 9.17578 10.627C8.85938 10.5215 8.45508 10.3633 7.99805 10.1699C7.54102 9.99414 7.18945 9.81836 6.94336 9.66016C6.69727 9.50195 6.45117 9.30859 6.20508 9.08008C5.94141 8.86914 5.76562 8.62305 5.66016 8.37695C5.55469 8.13086 5.50195 7.84961 5.50195 7.5332C5.50195 6.88281 5.73047 6.35547 6.20508 5.93359C6.66211 5.51172 7.24219 5.30078 7.92773 5.30078C10.0723 5.30078 12.1992 7.05859 14.291 10.5566H14.5371L14.3262 4.86133H14.0801L13.2539 5.86328C12.6738 5.61719 11.8828 5.38867 10.8809 5.19531C9.86133 5.00195 8.82422 4.89648 7.73438 4.89648C5.73047 4.89648 4.11328 5.40625 2.86523 6.4082C1.61719 7.41016 1.00195 8.71094 1.00195 10.3281C1.00195 11.1367 1.125 11.8398 1.38867 12.4727C1.63477 13.1055 2.00391 13.6504 2.47852 14.0723C2.95312 14.4941 3.44531 14.8457 3.95508 15.127C4.46484 15.4082 5.0625 15.6543 5.73047 15.8828C7.69922 16.5684 9.05273 17.1484 9.79102 17.6406C10.5293 18.1328 10.916 18.7832 10.916 19.5566C10.916 20.3477 10.6523 20.9805 10.125 21.4375C9.59766 21.9121 8.80664 22.1406 7.73438 22.1406C7.03125 22.1406 6.32812 21.9648 5.625 21.5957C4.92188 21.2266 4.27148 20.7344 3.67383 20.1016C3.07617 19.4688 2.54883 18.8184 2.07422 18.1504C1.59961 17.4824 1.17773 16.7617 0.791016 15.9883H0.544922ZM15.4863 5.65234H18.5449V17.3242C18.5449 20.7695 20.3379 22.4746 23.9238 22.4746C25.8223 22.4746 27.2637 22.0176 28.2832 21.0859C29.2852 20.1543 29.8125 18.7832 29.8477 16.9551H29.4258C29.3906 17.834 29.1621 18.5898 28.7402 19.2051C28.3184 19.8379 27.7207 20.1367 26.9473 20.1367C26.209 20.1367 25.6641 19.8379 25.3477 19.2402C25.0137 18.6426 24.8555 17.9043 24.8555 17.0605V5.65234H29.3906V5.00195H24.8555V0.185547H18.6152V5.00195H15.4863V5.65234ZM30.498 18.4316C30.498 19.6973 30.9199 20.6992 31.7988 21.4375C32.6602 22.1758 34.0312 22.5449 35.9297 22.5449C36.5977 22.5449 37.1953 22.4922 37.7227 22.3691C38.25 22.2637 38.707 22.0703 39.1289 21.8066C39.5508 21.543 39.8848 21.2969 40.1309 21.0684C40.377 20.8574 40.6934 20.541 41.0801 20.1367H41.1855C41.4492 20.6465 41.7305 21.0508 42.0469 21.3672C42.3633 21.6836 42.8379 21.9473 43.4707 22.1582C44.1035 22.3691 44.9121 22.4746 45.8613 22.4746C47.4082 22.4746 48.6211 22 49.4648 21.0332C50.3086 20.0664 50.7656 18.8008 50.8008 17.2188H50.2559C50.2207 18.0977 50.0625 18.8535 49.7461 19.5039C49.4297 20.1719 49.0078 20.4883 48.498 20.4883C48.0762 20.4883 47.7422 20.3301 47.5312 19.9961C47.3027 19.6797 47.1973 19.2754 47.1973 18.8008C47.1973 18.5898 47.2324 17.377 47.3027 15.1621C47.373 12.9473 47.4258 11.207 47.4258 9.94141C47.4258 9.02734 47.25 8.21875 46.9336 7.55078C46.5996 6.88281 46.1777 6.35547 45.6855 5.96875C45.1934 5.59961 44.5605 5.30078 43.8047 5.07227C43.0488 4.86133 42.3281 4.7207 41.6602 4.65039C40.9746 4.58008 40.2012 4.54492 39.3223 4.54492C38.5312 4.54492 37.7051 4.65039 36.8438 4.82617C35.9648 5.01953 35.1562 5.2832 34.4004 5.59961C33.6445 5.93359 33.0293 6.35547 32.5371 6.86523C32.0449 7.375 31.7988 7.91992 31.7988 8.5C31.7988 9.23828 32.0273 9.88867 32.502 10.4336C32.959 10.9785 33.6797 11.2422 34.6289 11.2422C35.5781 11.2422 36.3691 10.9961 36.9844 10.4863C37.5996 9.99414 37.916 9.48438 37.916 8.97461C37.916 8.48242 37.793 7.7793 37.5469 6.84766L37.1953 5.47656C37.5996 5.125 38.2148 4.93164 39.0234 4.93164C39.3398 4.93164 39.6387 5.00195 39.8848 5.10742C40.1309 5.21289 40.3242 5.38867 40.4648 5.61719C40.6055 5.8457 40.7285 6.07422 40.8164 6.28516C40.9043 6.49609 40.9746 6.77734 41.0098 7.09375C41.0449 7.42773 41.0625 7.69141 41.0625 7.86719C41.0625 8.04297 41.0801 8.28906 41.0801 8.57031V11.8398C40.8164 12.0508 40.2539 12.2617 39.3926 12.5078C38.5137 12.7539 37.5293 13.0176 36.4043 13.2988C35.2793 13.5801 34.4355 13.8262 33.873 14.0371C32.8184 14.4238 31.9922 14.9336 31.3945 15.6016C30.7969 16.2695 30.498 17.2188 30.498 18.4316ZM37.0547 17.4297C37.0547 16.375 37.2305 15.5312 37.5996 14.8809C37.9688 14.2305 38.5312 13.668 39.2871 13.2109C39.709 12.9648 40.3242 12.666 41.1152 12.3496L40.9746 19.5215C40.4648 20.2598 39.7969 20.6289 38.9883 20.6289C38.3555 20.6289 37.8809 20.3652 37.5469 19.8203C37.2129 19.293 37.0547 18.4844 37.0547 17.4297ZM50.3438 5.40625C51.1172 5.45898 51.7324 5.63477 52.1895 5.91602C52.7344 6.26758 53.0156 6.91797 53.0156 7.84961V20.1367C53.0156 20.541 52.9453 20.8398 52.8223 21.0508C52.6816 21.2617 52.4707 21.4199 52.1543 21.5254C51.7676 21.6484 51.2402 21.7188 50.6074 21.7539V22H62.6309V21.7539C62.5254 21.7539 62.2793 21.7363 61.875 21.7012C61.4707 21.666 61.1016 21.6309 60.75 21.5781C60.3984 21.543 60.1699 21.4902 60.0293 21.4199C59.5371 21.209 59.3086 20.7168 59.3086 19.9434V8.14844C59.502 7.79688 59.8711 7.41016 60.416 7.02344C60.9609 6.63672 61.5762 6.42578 62.2617 6.4082C62.2441 6.47852 62.1914 6.68945 62.0859 7.00586C61.9805 7.32227 61.9102 7.63867 61.8398 7.91992C61.7695 8.21875 61.7344 8.46484 61.7344 8.64062C61.7344 9.37891 61.9805 9.94141 62.4727 10.3633C62.9648 10.7852 63.5977 10.9785 64.3887 10.9785C65.1973 10.9785 65.8477 10.6797 66.375 10.082C66.9023 9.48438 67.166 8.76367 67.166 7.88477C67.166 6.90039 66.8672 6.10938 66.2871 5.51172C65.6895 4.91406 64.9512 4.61523 64.0371 4.61523C62.4199 4.61523 60.8555 5.58203 59.3789 7.49805H59.3086V4.89648L59.168 4.75586L50.3438 5.19531V5.40625ZM67.4473 5.65234H70.5059V17.3242C70.5059 20.7695 72.2988 22.4746 75.8848 22.4746C77.7832 22.4746 79.2246 22.0176 80.2441 21.0859C81.2461 20.1543 81.7734 18.7832 81.8086 16.9551H81.3867C81.3516 17.834 81.123 18.5898 80.7012 19.2051C80.2793 19.8379 79.6816 20.1367 78.9082 20.1367C78.1699 20.1367 77.625 19.8379 77.3086 19.2402C76.9746 18.6426 76.8164 17.9043 76.8164 17.0605V5.65234H81.3516V5.00195H76.8164V0.185547H70.5762V5.00195H67.4473V5.65234Z"
								fill="white"
							/>
						</svg>
					</div>

					<div
						style={{
							position: 'absolute',
							width: '81px',
							height: '15px',
							left: '844px',
							top: '500px',
							opacity: 0.5
						}}
					>
						<svg width="82" height="17" viewBox="0 0 82 17" fill="none" xmlns="http://www.w3.org/2000/svg">
							<g opacity="0.5">
								<path d="M72 1L81 8.5L72 16" stroke="white" />
								<line x1="4.37114e-08" y1="8.5" x2="81" y2="8.50001" stroke="white" />
							</g>
						</svg>
					</div>
				</div>
			</div>
		);
	}
}
